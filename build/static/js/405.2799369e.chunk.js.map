{"version":3,"file":"static/js/405.2799369e.chunk.js","mappings":"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","sources":["assets/images/auth/AuthBackground.tsx","hooks/useScriptRef.ts","sections/auth/auth-forms/AuthForgotPassword.tsx","pages/auth/auth1/forgot-password.tsx","sections/auth/AuthCard.tsx","sections/auth/AuthWrapper.tsx"],"sourcesContent":["// material-ui\nimport { useTheme } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\n// types\nimport { ThemeMode } from 'types/config';\n\n// ==============================|| AUTH BLUR BACK SVG ||============================== //\n\nconst AuthBackground = () => {\n  const theme = useTheme();\n\n  return (\n    <Box\n      sx={{\n        position: 'absolute',\n        filter: 'blur(140px)',\n        zIndex: -1,\n        bottom: 0,\n        left: 0,\n        top: 0,\n        right: 0,\n        overflow: 'hidden',\n        '&:before': {\n          content: `\" \"`,\n          width: 300,\n          height: 300,\n          borderRadius: '50%',\n          bgcolor: 'warning.lighter',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          opacity: theme.palette.mode === ThemeMode.DARK ? 0.6 : 1\n        }\n      }}\n    >\n      <Box\n        sx={{\n          width: 250,\n          height: 250,\n          borderRadius: '50%',\n          bgcolor: theme.palette.success.lighter,\n          ml: 20,\n          position: 'absolute',\n          bottom: 180,\n          opacity: theme.palette.mode === ThemeMode.DARK ? 0.8 : 1\n        }}\n      />\n      <Box\n        sx={{\n          width: 200,\n          height: 200,\n          borderRadius: '50%',\n          bgcolor: theme.palette.error.light,\n          position: 'absolute',\n          bottom: 0,\n          left: -50,\n          opacity: theme.palette.mode === ThemeMode.DARK ? 0.8 : 1\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default AuthBackground;\n","import { useEffect, useRef } from 'react';\n\n// ==============================|| HOOKS - FORMS REFERENCE  ||============================== //\n\nconst useScriptRef = () => {\n  const scripted = useRef(true);\n\n  useEffect(\n    () => () => {\n      scripted.current = false;\n    },\n    []\n  );\n\n  return scripted;\n};\n\nexport default useScriptRef;\n","import { useNavigate } from 'react-router-dom';\n\n// material-ui\nimport { Button, FormHelperText, Grid, InputLabel, OutlinedInput, Stack, Typography } from '@mui/material';\n\n// third-party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project-imports\nimport useAuth from 'hooks/useAuth';\nimport useScriptRef from 'hooks/useScriptRef';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport { dispatch } from 'store';\nimport { openSnackbar } from 'store/reducers/snackbar';\n\n// ============================|| FIREBASE - FORGOT PASSWORD ||============================ //\n\nconst AuthForgotPassword = () => {\n  const scriptedRef = useScriptRef();\n  const navigate = useNavigate();\n\n  const { isLoggedIn, resetPassword } = useAuth();\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          email: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            await resetPassword(values.email).then(\n              () => {\n                setStatus({ success: true });\n                setSubmitting(false);\n                dispatch(\n                  openSnackbar({\n                    open: true,\n                    message: 'Check mail for reset password link',\n                    variant: 'alert',\n                    alert: {\n                      color: 'success'\n                    },\n                    close: false\n                  })\n                );\n                setTimeout(() => {\n                  navigate(isLoggedIn ? '/auth/check-mail' : '/check-mail', { replace: true });\n                }, 1500);\n\n                // WARNING: do not set any formik state here as formik might be already destroyed here. You may get following error by doing so.\n                // Warning: Can't perform a React state update on an unmounted component. This is a no-op, but it indicates a memory leak in your application.\n                // To fix, cancel all subscriptions and asynchronous tasks in a useEffect cleanup function.\n                // github issue: https://github.com/formium/formik/issues/2430\n              },\n              (err: any) => {\n                setStatus({ success: false });\n                setErrors({ submit: err.message });\n                setSubmitting(false);\n              }\n            );\n          } catch (err: any) {\n            console.error(err);\n            if (scriptedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Stack spacing={1}>\n                  <InputLabel htmlFor=\"email-forgot\">Email Address</InputLabel>\n                  <OutlinedInput\n                    fullWidth\n                    error={Boolean(touched.email && errors.email)}\n                    id=\"email-forgot\"\n                    type=\"email\"\n                    value={values.email}\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    placeholder=\"Enter email address\"\n                    inputProps={{}}\n                  />\n                  {touched.email && errors.email && (\n                    <FormHelperText error id=\"helper-text-email-forgot\">\n                      {errors.email}\n                    </FormHelperText>\n                  )}\n                </Stack>\n              </Grid>\n              {errors.submit && (\n                <Grid item xs={12}>\n                  <FormHelperText error>{errors.submit}</FormHelperText>\n                </Grid>\n              )}\n              <Grid item xs={12} sx={{ mb: -2 }}>\n                <Typography variant=\"caption\">Do not forgot to check SPAM box.</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <AnimateButton>\n                  <Button disableElevation disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Send Password Reset Email\n                  </Button>\n                </AnimateButton>\n              </Grid>\n            </Grid>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AuthForgotPassword;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { Grid, Stack, Typography } from '@mui/material';\n\n// project-imports\nimport useAuth from 'hooks/useAuth';\nimport AuthWrapper from 'sections/auth/AuthWrapper';\nimport AuthForgotPassword from 'sections/auth/auth-forms/AuthForgotPassword';\n\n// ================================|| FORGOT PASSWORD ||================================ //\n\nconst ForgotPassword = () => {\n  const { isLoggedIn } = useAuth();\n\n  return (\n    <AuthWrapper>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"baseline\" sx={{ mb: { xs: -0.5, sm: 0.5 } }}>\n            <Typography variant=\"h3\">Forgot Password</Typography>\n            <Typography\n              component={Link}\n              to={isLoggedIn ? '/auth/login' : '/login'}\n              variant=\"body1\"\n              sx={{ textDecoration: 'none' }}\n              color=\"primary\"\n            >\n              Back to Login\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={12}>\n          <AuthForgotPassword />\n        </Grid>\n      </Grid>\n    </AuthWrapper>\n  );\n};\n\nexport default ForgotPassword;\n","// material-ui\nimport { Box } from '@mui/material';\n\n// project-imports\nimport MainCard, { MainCardProps } from 'components/MainCard';\n\n// ==============================|| AUTHENTICATION - CARD ||============================== //\n\nconst AuthCard = ({ children, ...other }: MainCardProps) => (\n  <MainCard\n    sx={{\n      maxWidth: { xs: 400, md: 480 },\n      margin: { xs: 2.5, md: 3 },\n      '& > *': {\n        flexGrow: 1,\n        flexBasis: '50%'\n      }\n    }}\n    content={false}\n    {...other}\n  >\n    <Box sx={{ p: { xs: 2, sm: 3, md: 4, xl: 5 } }}>{children}</Box>\n  </MainCard>\n);\n\nexport default AuthCard;\n","import { ReactNode } from 'react';\n\n// material-ui\nimport { Box, Grid } from '@mui/material';\n\n// project-imports\nimport AuthCard from './AuthCard';\n\n// assets\nimport AuthBackground from 'assets/images/auth/AuthBackground';\n\ninterface Props {\n  children: ReactNode;\n}\n\n// ==============================|| AUTHENTICATION - WRAPPER ||============================== //\n\nconst AuthWrapper = ({ children }: Props) => (\n  <Box sx={{ minHeight: '100vh' }}>\n    <AuthBackground />\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      sx={{\n        minHeight: '100vh'\n      }}\n    >\n      <Grid item xs={12}>\n        <Grid\n          item\n          xs={12}\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          sx={{ minHeight: { xs: 'calc(100vh - 210px)', sm: 'calc(100vh - 134px)', md: 'calc(100vh - 112px)' } }}\n        >\n          <Grid item>\n            <AuthCard>{children}</AuthCard>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default AuthWrapper;\n"],"names":["theme","useTheme","_jsxs","Box","sx","position","filter","zIndex","bottom","left","top","right","overflow","content","width","height","borderRadius","bgcolor","opacity","palette","mode","ThemeMode","DARK","children","_jsx","success","lighter","ml","error","light","scripted","useRef","useEffect","current","scriptedRef","useScriptRef","navigate","useNavigate","_useAuth","useAuth","isLoggedIn","resetPassword","_Fragment","Formik","initialValues","email","submit","validationSchema","Yup","shape","max","required","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","_ref","setErrors","setStatus","setSubmitting","wrap","_context","prev","next","then","dispatch","openSnackbar","open","message","variant","alert","color","close","setTimeout","replace","err","t0","console","stop","_x","_x2","apply","arguments","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","Grid","container","spacing","item","xs","Stack","InputLabel","htmlFor","OutlinedInput","fullWidth","Boolean","id","type","value","name","onBlur","onChange","placeholder","inputProps","FormHelperText","mb","Typography","AnimateButton","Button","disableElevation","disabled","size","AuthWrapper","direction","justifyContent","alignItems","sm","component","Link","to","textDecoration","AuthForgotPassword","other","_objectWithoutProperties","_excluded","MainCard","_objectSpread","maxWidth","md","margin","flexGrow","flexBasis","p","xl","minHeight","AuthBackground","AuthCard"],"sourceRoot":""}